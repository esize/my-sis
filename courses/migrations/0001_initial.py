# Generated by Django 5.1 on 2024-08-25 18:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('academic_structure', '0001_initial'),
        ('grading', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CourseMeetingDays',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=255)),
                ('monday', models.BooleanField(default=False)),
                ('tuesday', models.BooleanField(default=False)),
                ('wednesday', models.BooleanField(default=False)),
                ('thursday', models.BooleanField(default=False)),
                ('friday', models.BooleanField(default=False)),
                ('saturday', models.BooleanField(default=False)),
                ('sunday', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Course Meeting Pattern Days',
                'verbose_name_plural': 'Course Meeting Pattern Days',
            },
        ),
        migrations.CreateModel(
            name='CourseMeetingPeriod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=255)),
                ('start_time', models.TimeField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseSectionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseTags',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseMeetingPattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=255)),
                ('sort_order', models.IntegerField()),
                ('recurring_every_number_of_weeks', models.IntegerField(default=1)),
                ('days', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.coursemeetingdays')),
                ('time', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.coursemeetingperiod')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=5, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('academic_unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_subjects', to='academic_structure.academicunit')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('abbreviated_title', models.CharField(blank=True, max_length=50, null=True)),
                ('number', models.CharField(max_length=8)),
                ('credit_hours', models.IntegerField()),
                ('description', models.TextField(blank=True, null=True)),
                ('special_topics_course', models.BooleanField(default=False)),
                ('autogenerate_course_section_numbers', models.BooleanField(default=True)),
                ('unlimited_capacity', models.BooleanField(default=False)),
                ('first_available_date', models.DateField(blank=True, null=True)),
                ('last_available_date', models.DateField(blank=True, null=True)),
                ('hidden', models.BooleanField(default=False)),
                ('public_notes', models.TextField(blank=True, help_text='Notes that students can view.', null=True)),
                ('private_notes', models.TextField(blank=True, help_text="Notes that students can't view.", null=True)),
                ('course_credits', models.IntegerField(blank=True, null=True)),
                ('academic_level', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='academic_structure.academiclevel')),
                ('allowed_grading_bases', models.ManyToManyField(related_name='courses', to='grading.gradingbasis')),
                ('allowed_locations', models.ManyToManyField(related_name='courses', to='academic_structure.location')),
                ('course_inventory_owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_inventories', to='academic_structure.academicunit')),
                ('offered_by', models.ManyToManyField(related_name='offered_courses', to='academic_structure.academicunit')),
                ('subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.coursesubject')),
                ('tags', models.ManyToManyField(related_name='courses', to='courses.coursetags')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('active', models.BooleanField(default=True)),
                ('code', models.CharField(max_length=8)),
                ('hidden', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('preliminary', 'preliminary'), ('open', 'open'), ('waitlist', 'waitlist'), ('hold', 'hold'), ('closed', 'closed'), ('cancelled', 'cancelled')], default='preliminary', max_length=255)),
                ('bookstore_url', models.URLField(blank=True, null=True)),
                ('delivery_mode', models.CharField(choices=[('In-Person', 'In-Person'), ('Online', 'Online'), ('Hybrid', 'Hybrid')], max_length=255)),
                ('academic_period', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='academic_structure.academicperiod')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='academic_structure.location')),
                ('meeting_pattern', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.coursemeetingpattern')),
                ('section_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='courses.coursesectiontype')),
                ('tags', models.ManyToManyField(related_name='course_sections', to='courses.coursetags')),
            ],
            options={
                'verbose_name': 'Course Section',
                'verbose_name_plural': 'Course Sections',
            },
        ),
    ]
